// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using StockArt.Data;
using System;

namespace StockArt.Data.Migrations
{
    [DbContext(typeof(StockArtDBContext))]
    [Migration("20180204031459_issubject")]
    partial class issubject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockArt.Domain.ImageSet", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ImageCount");

                    b.HasKey("Name");

                    b.ToTable("ImageSets");
                });

            modelBuilder.Entity("StockArt.Domain.ImageSetSubject", b =>
                {
                    b.Property<string>("ImageSetName");

                    b.Property<int>("SubjectID");

                    b.HasKey("ImageSetName", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("ImageSetSubject");
                });

            modelBuilder.Entity("StockArt.Domain.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayName");

                    b.HasKey("SubjectID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("StockArt.Domain.ImageSetSubject", b =>
                {
                    b.HasOne("StockArt.Domain.ImageSet", "Set")
                        .WithMany("ImageSetSubjects")
                        .HasForeignKey("ImageSetName")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StockArt.Domain.Subject", "Subject")
                        .WithMany("ImageSetSubjects")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
